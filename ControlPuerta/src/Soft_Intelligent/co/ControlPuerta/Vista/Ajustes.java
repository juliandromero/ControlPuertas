package Soft_Intelligent.co.ControlPuerta.Vista;

import Soft_Intelligent.co.ControlPuerta.Modelo.ConectMySql;
import Soft_Intelligent.co.ControlPuerta.Modelo.Configuracion;
import Soft_Intelligent.co.ControlPuerta.controlpuerta.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Julian Sanchez
 */
public class Ajustes extends javax.swing.JFrame {

    DefaultTableModel tabla;
    public static String ELIMINAR = "ELIMINAR";
    private List<Modificar> myList;
    Configuracion con = new Configuracion();
    Modificar modificar = new Modificar();
    ConectMySql cone = new ConectMySql();

    //constructor de la clase 
    public Ajustes() {
        initComponents();

        //Propiedades del frame
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Modificar Puerta");
        //Propiedades de la tabla
        tabla = new DefaultTableModel();
        tabla.addColumn("ID");
        tabla.addColumn("Nombre");
        tabla.addColumn("Hora Inicio");
        tabla.addColumn("Hora Fin");
        tabla.addColumn("CantidadApertura");
        tabla.addColumn("Lunes");
        tabla.addColumn("Martes");
        tabla.addColumn("Miercoles");
        tabla.addColumn("Jueves");
        tabla.addColumn("Viernes");
        tabla.addColumn("Sabado");
        tabla.addColumn("Domingo");
        this.jTable1.setModel(tabla);
        cargar_lista_de_alarmas();

    }

    private void cargar_lista_de_alarmas() {
        System.out.println("Fuera del try");
        try {
            System.out.println("Fuera del dentrot");
            this.myList = this.con.recuperarTodas(cone.conexion());
            System.out.println("Fuera del despues de conexion 1");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            System.out.println("Fuera del despues de conexion");

            for (int i = 0; i < this.myList.size(); i++) {
                //  String IdAlarma = this.modificar.getIdAlarma().toString();

                dtm.addRow(new Object[]{
                    this.myList.get(i).getIdAlarma(),
                    this.myList.get(i).getNombrePuerta(),
                    this.myList.get(i).getHora1(),
                    this.myList.get(i).getHora2(),
                    this.myList.get(i).getCantidadApertura(),
                    this.myList.get(i).isLun(),
                    this.myList.get(i).isMar(),
                    this.myList.get(i).isMie(),
                    this.myList.get(i).isJue(),
                    this.myList.get(i).isVie(),
                    this.myList.get(i).isSab(),
                    this.myList.get(i).isDom(),});
            }
            dtm.getTableModelListeners();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(this, "Ha surgido un error y no se han podido recuperar los registros");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonConfig = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButtonConfig.setText("Agregar");
        jButtonConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfigActionPerformed(evt);
            }
        });

        jButton1.setText("Atras");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonConfig)))
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConfig)
                    .addComponent(jButtonEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfigActionPerformed
        ModificarPuerta obj = new ModificarPuerta();
        obj.setVisible(true);
        dispose();


    }//GEN-LAST:event_jButtonConfigActionPerformed

    public void borrarAl(int ID) {
        con.eliminarAl(ID);
    }
    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
            try {
                        int posicion = jTable1.getSelectedRow();
            int ID = myList.get(posicion).getIdAlarma();
            borrarAl(ID);
            cargar_lista_de_alarmas();
        } catch (Exception e) {
                JOptionPane.showMessageDialog(this,"No ha seleccionado ningun dato");
        }

        
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        MenuDeOpciones mdo = new MenuDeOpciones();
        mdo.setVisible(true);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ajustes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ajustes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ajustes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ajustes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ajustes().setVisible(true);
            }
        });
    }

    private void construirTabla() {
        String titulos[] = {"ID", "Nombre", "Hora Inicio", "CantidadApertura", "Hora Fin", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo"};
        String informacion[][] = obtenerMatriz2();

        jTable1 = new JTable(informacion, titulos);

    }

    private String[][] obtenerMatriz2() {

        Configuracion config = new Configuracion();
        myList = config.BuscaAl();
        String matrizInfo[][] = new String[myList.size()][11];

        for (int i = 0; i < myList.size(); i++) {
            matrizInfo[i][0] = myList.get(i).getIdAlarma() + "";
            matrizInfo[i][1] = myList.get(i).getNombrePuerta() + "";
            matrizInfo[i][2] = myList.get(i).getHora1() + "";
            matrizInfo[i][3] = myList.get(i).getHora2() + "";
            matrizInfo[i][4] = myList.get(i).getCantidadApertura() + "";
            matrizInfo[i][5] = myList.get(i).isLun() + "";
            matrizInfo[i][6] = myList.get(i).isMar() + "";
            matrizInfo[i][7] = myList.get(i).isMie() + "";
            matrizInfo[i][8] = myList.get(i).isJue() + "";
            matrizInfo[i][9] = myList.get(i).isVie() + "";
            matrizInfo[i][10] = myList.get(i).isSab() + "";
            matrizInfo[i][11] = myList.get(i).isDom() + "";
        }
        return matrizInfo;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonConfig;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
